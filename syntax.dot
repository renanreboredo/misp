// Generated by GNU Bison 3.0.4.
// Report bugs to <bug-bison@gnu.org>.
// Home page: <http://www.gnu.org/software/bison/>.

digraph "syntax.y"
{
  node [fontname = courier, shape = box, colorscheme = paired6]
  edge [fontname = courier]

  0 [label="State 0\n\l  0 $accept: . program $end\l  1 program: . %empty  [$end]\l  2        | . statements\l  3        | . error\l  4 statements: . statement\l  5           | . statement statements\l  6 statement: . '(' command ')'\l  7          | . '(' def ')'\l  8          | . '(' defn ')'\l"]
  0 -> 1 [style=dotted]
  0 -> 2 [style=solid label="'('"]
  0 -> 3 [style=dashed label="program"]
  0 -> 4 [style=dashed label="statements"]
  0 -> 5 [style=dashed label="statement"]
  0 -> "0R1" [label="[$end]", style=solid]
 "0R1" [label="R1", fillcolor=3, shape=diamond, style=filled]
  1 [label="State 1\n\l  3 program: error .\l"]
  1 -> "1R3" [style=solid]
 "1R3" [label="R3", fillcolor=3, shape=diamond, style=filled]
  2 [label="State 2\n\l  6 statement: '(' . command ')'\l  7          | '(' . def ')'\l  8          | '(' . defn ')'\l  9 command: . opr factor factor\l 10        | . write\l 11        | . read\l 12        | . ATOM '(' compound_factor ')'\l 13        | . ATOM '(' ')'\l 14        | . expr\l 15        | . IF '(' expr ')' '?' '(' command ')' '(' command ')'\l 16        | . command '(' command ')'\l 17        | . list_iterator ATOM vector\l 18        | . list_op vector\l 19        | . NIL\l 20 list_iterator: . MAP\l 21              | . FILTER\l 22 list_op: . HEAD\l 23        | . TAIL\l 24        | . CONS\l 25        | . COUNT\l 26 write: . WRITE '(' command ')'\l 27 read: . READ '(' command ')'\l 29 defn: . DEFN ATOM $@1 fnbody\l 32 def: . DEF ATOM factor\l 33    | . DEF ATOM vector\l 47 expr: . log_opr factor factor\l 48     | . NOT '(' expr ')'\l 49 opr: . '+'\l 50    | . '-'\l 51    | . '*'\l 52    | . '/'\l 53 log_opr: . LOGOPR\l 54        | . COMPLOGOPR\l"]
  2 -> 6 [style=solid label="MAP"]
  2 -> 7 [style=solid label="FILTER"]
  2 -> 8 [style=solid label="DEFN"]
  2 -> 9 [style=solid label="DEF"]
  2 -> 10 [style=solid label="ATOM"]
  2 -> 11 [style=solid label="COUNT"]
  2 -> 12 [style=solid label="CONS"]
  2 -> 13 [style=solid label="HEAD"]
  2 -> 14 [style=solid label="TAIL"]
  2 -> 15 [style=solid label="NIL"]
  2 -> 16 [style=solid label="NOT"]
  2 -> 17 [style=solid label="LOGOPR"]
  2 -> 18 [style=solid label="COMPLOGOPR"]
  2 -> 19 [style=solid label="READ"]
  2 -> 20 [style=solid label="WRITE"]
  2 -> 21 [style=solid label="IF"]
  2 -> 22 [style=solid label="'+'"]
  2 -> 23 [style=solid label="'-'"]
  2 -> 24 [style=solid label="'*'"]
  2 -> 25 [style=solid label="'/'"]
  2 -> 26 [style=dashed label="command"]
  2 -> 27 [style=dashed label="list_iterator"]
  2 -> 28 [style=dashed label="list_op"]
  2 -> 29 [style=dashed label="write"]
  2 -> 30 [style=dashed label="read"]
  2 -> 31 [style=dashed label="defn"]
  2 -> 32 [style=dashed label="def"]
  2 -> 33 [style=dashed label="expr"]
  2 -> 34 [style=dashed label="opr"]
  2 -> 35 [style=dashed label="log_opr"]
  3 [label="State 3\n\l  0 $accept: program . $end\l"]
  3 -> 36 [style=solid label="$end"]
  4 [label="State 4\n\l  2 program: statements .\l"]
  4 -> "4R2" [style=solid]
 "4R2" [label="R2", fillcolor=3, shape=diamond, style=filled]
  5 [label="State 5\n\l  4 statements: . statement\l  4           | statement .  [$end]\l  5           | . statement statements\l  5           | statement . statements\l  6 statement: . '(' command ')'\l  7          | . '(' def ')'\l  8          | . '(' defn ')'\l"]
  5 -> 2 [style=solid label="'('"]
  5 -> 37 [style=dashed label="statements"]
  5 -> 5 [style=dashed label="statement"]
  5 -> "5R4" [style=solid]
 "5R4" [label="R4", fillcolor=3, shape=diamond, style=filled]
  6 [label="State 6\n\l 20 list_iterator: MAP .\l"]
  6 -> "6R20" [style=solid]
 "6R20" [label="R20", fillcolor=3, shape=diamond, style=filled]
  7 [label="State 7\n\l 21 list_iterator: FILTER .\l"]
  7 -> "7R21" [style=solid]
 "7R21" [label="R21", fillcolor=3, shape=diamond, style=filled]
  8 [label="State 8\n\l 29 defn: DEFN . ATOM $@1 fnbody\l"]
  8 -> 38 [style=solid label="ATOM"]
  9 [label="State 9\n\l 32 def: DEF . ATOM factor\l 33    | DEF . ATOM vector\l"]
  9 -> 39 [style=solid label="ATOM"]
  10 [label="State 10\n\l 12 command: ATOM . '(' compound_factor ')'\l 13        | ATOM . '(' ')'\l"]
  10 -> 40 [style=solid label="'('"]
  11 [label="State 11\n\l 25 list_op: COUNT .\l"]
  11 -> "11R25" [style=solid]
 "11R25" [label="R25", fillcolor=3, shape=diamond, style=filled]
  12 [label="State 12\n\l 24 list_op: CONS .\l"]
  12 -> "12R24" [style=solid]
 "12R24" [label="R24", fillcolor=3, shape=diamond, style=filled]
  13 [label="State 13\n\l 22 list_op: HEAD .\l"]
  13 -> "13R22" [style=solid]
 "13R22" [label="R22", fillcolor=3, shape=diamond, style=filled]
  14 [label="State 14\n\l 23 list_op: TAIL .\l"]
  14 -> "14R23" [style=solid]
 "14R23" [label="R23", fillcolor=3, shape=diamond, style=filled]
  15 [label="State 15\n\l 19 command: NIL .\l"]
  15 -> "15R19" [style=solid]
 "15R19" [label="R19", fillcolor=3, shape=diamond, style=filled]
  16 [label="State 16\n\l 48 expr: NOT . '(' expr ')'\l"]
  16 -> 41 [style=solid label="'('"]
  17 [label="State 17\n\l 53 log_opr: LOGOPR .\l"]
  17 -> "17R53" [style=solid]
 "17R53" [label="R53", fillcolor=3, shape=diamond, style=filled]
  18 [label="State 18\n\l 54 log_opr: COMPLOGOPR .\l"]
  18 -> "18R54" [style=solid]
 "18R54" [label="R54", fillcolor=3, shape=diamond, style=filled]
  19 [label="State 19\n\l 27 read: READ . '(' command ')'\l"]
  19 -> 42 [style=solid label="'('"]
  20 [label="State 20\n\l 26 write: WRITE . '(' command ')'\l"]
  20 -> 43 [style=solid label="'('"]
  21 [label="State 21\n\l 15 command: IF . '(' expr ')' '?' '(' command ')' '(' command ')'\l"]
  21 -> 44 [style=solid label="'('"]
  22 [label="State 22\n\l 49 opr: '+' .\l"]
  22 -> "22R49" [style=solid]
 "22R49" [label="R49", fillcolor=3, shape=diamond, style=filled]
  23 [label="State 23\n\l 50 opr: '-' .\l"]
  23 -> "23R50" [style=solid]
 "23R50" [label="R50", fillcolor=3, shape=diamond, style=filled]
  24 [label="State 24\n\l 51 opr: '*' .\l"]
  24 -> "24R51" [style=solid]
 "24R51" [label="R51", fillcolor=3, shape=diamond, style=filled]
  25 [label="State 25\n\l 52 opr: '/' .\l"]
  25 -> "25R52" [style=solid]
 "25R52" [label="R52", fillcolor=3, shape=diamond, style=filled]
  26 [label="State 26\n\l  6 statement: '(' command . ')'\l 16 command: command . '(' command ')'\l"]
  26 -> 45 [style=solid label="'('"]
  26 -> 46 [style=solid label="')'"]
  27 [label="State 27\n\l 17 command: list_iterator . ATOM vector\l"]
  27 -> 47 [style=solid label="ATOM"]
  28 [label="State 28\n\l 18 command: list_op . vector\l 34 vector: . '[' element ']'\l"]
  28 -> 48 [style=solid label="'['"]
  28 -> 49 [style=dashed label="vector"]
  29 [label="State 29\n\l 10 command: write .\l"]
  29 -> "29R10" [style=solid]
 "29R10" [label="R10", fillcolor=3, shape=diamond, style=filled]
  30 [label="State 30\n\l 11 command: read .\l"]
  30 -> "30R11" [style=solid]
 "30R11" [label="R11", fillcolor=3, shape=diamond, style=filled]
  31 [label="State 31\n\l  8 statement: '(' defn . ')'\l"]
  31 -> 50 [style=solid label="')'"]
  32 [label="State 32\n\l  7 statement: '(' def . ')'\l"]
  32 -> 51 [style=solid label="')'"]
  33 [label="State 33\n\l 14 command: expr .\l"]
  33 -> "33R14" [style=solid]
 "33R14" [label="R14", fillcolor=3, shape=diamond, style=filled]
  34 [label="State 34\n\l  9 command: opr . factor factor\l 43 factor: . term\l 44       | . '(' command ')'\l 45 term: . ATOM\l 46     | . NUM\l"]
  34 -> 52 [style=solid label="ATOM"]
  34 -> 53 [style=solid label="NUM"]
  34 -> 54 [style=solid label="'('"]
  34 -> 55 [style=dashed label="factor"]
  34 -> 56 [style=dashed label="term"]
  35 [label="State 35\n\l 43 factor: . term\l 44       | . '(' command ')'\l 45 term: . ATOM\l 46     | . NUM\l 47 expr: log_opr . factor factor\l"]
  35 -> 52 [style=solid label="ATOM"]
  35 -> 53 [style=solid label="NUM"]
  35 -> 54 [style=solid label="'('"]
  35 -> 57 [style=dashed label="factor"]
  35 -> 56 [style=dashed label="term"]
  36 [label="State 36\n\l  0 $accept: program $end .\l"]
  36 -> "36R0" [style=solid]
 "36R0" [label="Acc", fillcolor=1, shape=diamond, style=filled]
  37 [label="State 37\n\l  5 statements: statement statements .\l"]
  37 -> "37R5" [style=solid]
 "37R5" [label="R5", fillcolor=3, shape=diamond, style=filled]
  38 [label="State 38\n\l 28 $@1: . %empty\l 29 defn: DEFN ATOM . $@1 fnbody\l"]
  38 -> 58 [style=dashed label="$@1"]
  38 -> "38R28" [style=solid]
 "38R28" [label="R28", fillcolor=3, shape=diamond, style=filled]
  39 [label="State 39\n\l 32 def: DEF ATOM . factor\l 33    | DEF ATOM . vector\l 34 vector: . '[' element ']'\l 43 factor: . term\l 44       | . '(' command ')'\l 45 term: . ATOM\l 46     | . NUM\l"]
  39 -> 52 [style=solid label="ATOM"]
  39 -> 53 [style=solid label="NUM"]
  39 -> 54 [style=solid label="'('"]
  39 -> 48 [style=solid label="'['"]
  39 -> 59 [style=dashed label="vector"]
  39 -> 60 [style=dashed label="factor"]
  39 -> 56 [style=dashed label="term"]
  40 [label="State 40\n\l 12 command: ATOM '(' . compound_factor ')'\l 13        | ATOM '(' . ')'\l 41 compound_factor: . factor\l 42                | . factor compound_factor\l 43 factor: . term\l 44       | . '(' command ')'\l 45 term: . ATOM\l 46     | . NUM\l"]
  40 -> 52 [style=solid label="ATOM"]
  40 -> 53 [style=solid label="NUM"]
  40 -> 54 [style=solid label="'('"]
  40 -> 61 [style=solid label="')'"]
  40 -> 62 [style=dashed label="compound_factor"]
  40 -> 63 [style=dashed label="factor"]
  40 -> 56 [style=dashed label="term"]
  41 [label="State 41\n\l 47 expr: . log_opr factor factor\l 48     | . NOT '(' expr ')'\l 48     | NOT '(' . expr ')'\l 53 log_opr: . LOGOPR\l 54        | . COMPLOGOPR\l"]
  41 -> 16 [style=solid label="NOT"]
  41 -> 17 [style=solid label="LOGOPR"]
  41 -> 18 [style=solid label="COMPLOGOPR"]
  41 -> 64 [style=dashed label="expr"]
  41 -> 35 [style=dashed label="log_opr"]
  42 [label="State 42\n\l  9 command: . opr factor factor\l 10        | . write\l 11        | . read\l 12        | . ATOM '(' compound_factor ')'\l 13        | . ATOM '(' ')'\l 14        | . expr\l 15        | . IF '(' expr ')' '?' '(' command ')' '(' command ')'\l 16        | . command '(' command ')'\l 17        | . list_iterator ATOM vector\l 18        | . list_op vector\l 19        | . NIL\l 20 list_iterator: . MAP\l 21              | . FILTER\l 22 list_op: . HEAD\l 23        | . TAIL\l 24        | . CONS\l 25        | . COUNT\l 26 write: . WRITE '(' command ')'\l 27 read: . READ '(' command ')'\l 27     | READ '(' . command ')'\l 47 expr: . log_opr factor factor\l 48     | . NOT '(' expr ')'\l 49 opr: . '+'\l 50    | . '-'\l 51    | . '*'\l 52    | . '/'\l 53 log_opr: . LOGOPR\l 54        | . COMPLOGOPR\l"]
  42 -> 6 [style=solid label="MAP"]
  42 -> 7 [style=solid label="FILTER"]
  42 -> 10 [style=solid label="ATOM"]
  42 -> 11 [style=solid label="COUNT"]
  42 -> 12 [style=solid label="CONS"]
  42 -> 13 [style=solid label="HEAD"]
  42 -> 14 [style=solid label="TAIL"]
  42 -> 15 [style=solid label="NIL"]
  42 -> 16 [style=solid label="NOT"]
  42 -> 17 [style=solid label="LOGOPR"]
  42 -> 18 [style=solid label="COMPLOGOPR"]
  42 -> 19 [style=solid label="READ"]
  42 -> 20 [style=solid label="WRITE"]
  42 -> 21 [style=solid label="IF"]
  42 -> 22 [style=solid label="'+'"]
  42 -> 23 [style=solid label="'-'"]
  42 -> 24 [style=solid label="'*'"]
  42 -> 25 [style=solid label="'/'"]
  42 -> 65 [style=dashed label="command"]
  42 -> 27 [style=dashed label="list_iterator"]
  42 -> 28 [style=dashed label="list_op"]
  42 -> 29 [style=dashed label="write"]
  42 -> 30 [style=dashed label="read"]
  42 -> 33 [style=dashed label="expr"]
  42 -> 34 [style=dashed label="opr"]
  42 -> 35 [style=dashed label="log_opr"]
  43 [label="State 43\n\l  9 command: . opr factor factor\l 10        | . write\l 11        | . read\l 12        | . ATOM '(' compound_factor ')'\l 13        | . ATOM '(' ')'\l 14        | . expr\l 15        | . IF '(' expr ')' '?' '(' command ')' '(' command ')'\l 16        | . command '(' command ')'\l 17        | . list_iterator ATOM vector\l 18        | . list_op vector\l 19        | . NIL\l 20 list_iterator: . MAP\l 21              | . FILTER\l 22 list_op: . HEAD\l 23        | . TAIL\l 24        | . CONS\l 25        | . COUNT\l 26 write: . WRITE '(' command ')'\l 26      | WRITE '(' . command ')'\l 27 read: . READ '(' command ')'\l 47 expr: . log_opr factor factor\l 48     | . NOT '(' expr ')'\l 49 opr: . '+'\l 50    | . '-'\l 51    | . '*'\l 52    | . '/'\l 53 log_opr: . LOGOPR\l 54        | . COMPLOGOPR\l"]
  43 -> 6 [style=solid label="MAP"]
  43 -> 7 [style=solid label="FILTER"]
  43 -> 10 [style=solid label="ATOM"]
  43 -> 11 [style=solid label="COUNT"]
  43 -> 12 [style=solid label="CONS"]
  43 -> 13 [style=solid label="HEAD"]
  43 -> 14 [style=solid label="TAIL"]
  43 -> 15 [style=solid label="NIL"]
  43 -> 16 [style=solid label="NOT"]
  43 -> 17 [style=solid label="LOGOPR"]
  43 -> 18 [style=solid label="COMPLOGOPR"]
  43 -> 19 [style=solid label="READ"]
  43 -> 20 [style=solid label="WRITE"]
  43 -> 21 [style=solid label="IF"]
  43 -> 22 [style=solid label="'+'"]
  43 -> 23 [style=solid label="'-'"]
  43 -> 24 [style=solid label="'*'"]
  43 -> 25 [style=solid label="'/'"]
  43 -> 66 [style=dashed label="command"]
  43 -> 27 [style=dashed label="list_iterator"]
  43 -> 28 [style=dashed label="list_op"]
  43 -> 29 [style=dashed label="write"]
  43 -> 30 [style=dashed label="read"]
  43 -> 33 [style=dashed label="expr"]
  43 -> 34 [style=dashed label="opr"]
  43 -> 35 [style=dashed label="log_opr"]
  44 [label="State 44\n\l 15 command: IF '(' . expr ')' '?' '(' command ')' '(' command ')'\l 47 expr: . log_opr factor factor\l 48     | . NOT '(' expr ')'\l 53 log_opr: . LOGOPR\l 54        | . COMPLOGOPR\l"]
  44 -> 16 [style=solid label="NOT"]
  44 -> 17 [style=solid label="LOGOPR"]
  44 -> 18 [style=solid label="COMPLOGOPR"]
  44 -> 67 [style=dashed label="expr"]
  44 -> 35 [style=dashed label="log_opr"]
  45 [label="State 45\n\l  9 command: . opr factor factor\l 10        | . write\l 11        | . read\l 12        | . ATOM '(' compound_factor ')'\l 13        | . ATOM '(' ')'\l 14        | . expr\l 15        | . IF '(' expr ')' '?' '(' command ')' '(' command ')'\l 16        | . command '(' command ')'\l 16        | command '(' . command ')'\l 17        | . list_iterator ATOM vector\l 18        | . list_op vector\l 19        | . NIL\l 20 list_iterator: . MAP\l 21              | . FILTER\l 22 list_op: . HEAD\l 23        | . TAIL\l 24        | . CONS\l 25        | . COUNT\l 26 write: . WRITE '(' command ')'\l 27 read: . READ '(' command ')'\l 47 expr: . log_opr factor factor\l 48     | . NOT '(' expr ')'\l 49 opr: . '+'\l 50    | . '-'\l 51    | . '*'\l 52    | . '/'\l 53 log_opr: . LOGOPR\l 54        | . COMPLOGOPR\l"]
  45 -> 6 [style=solid label="MAP"]
  45 -> 7 [style=solid label="FILTER"]
  45 -> 10 [style=solid label="ATOM"]
  45 -> 11 [style=solid label="COUNT"]
  45 -> 12 [style=solid label="CONS"]
  45 -> 13 [style=solid label="HEAD"]
  45 -> 14 [style=solid label="TAIL"]
  45 -> 15 [style=solid label="NIL"]
  45 -> 16 [style=solid label="NOT"]
  45 -> 17 [style=solid label="LOGOPR"]
  45 -> 18 [style=solid label="COMPLOGOPR"]
  45 -> 19 [style=solid label="READ"]
  45 -> 20 [style=solid label="WRITE"]
  45 -> 21 [style=solid label="IF"]
  45 -> 22 [style=solid label="'+'"]
  45 -> 23 [style=solid label="'-'"]
  45 -> 24 [style=solid label="'*'"]
  45 -> 25 [style=solid label="'/'"]
  45 -> 68 [style=dashed label="command"]
  45 -> 27 [style=dashed label="list_iterator"]
  45 -> 28 [style=dashed label="list_op"]
  45 -> 29 [style=dashed label="write"]
  45 -> 30 [style=dashed label="read"]
  45 -> 33 [style=dashed label="expr"]
  45 -> 34 [style=dashed label="opr"]
  45 -> 35 [style=dashed label="log_opr"]
  46 [label="State 46\n\l  6 statement: '(' command ')' .\l"]
  46 -> "46R6" [style=solid]
 "46R6" [label="R6", fillcolor=3, shape=diamond, style=filled]
  47 [label="State 47\n\l 17 command: list_iterator ATOM . vector\l 34 vector: . '[' element ']'\l"]
  47 -> 48 [style=solid label="'['"]
  47 -> 69 [style=dashed label="vector"]
  48 [label="State 48\n\l 34 vector: '[' . element ']'\l 39 element: . term\l 40        | . term element\l 45 term: . ATOM\l 46     | . NUM\l"]
  48 -> 52 [style=solid label="ATOM"]
  48 -> 53 [style=solid label="NUM"]
  48 -> 70 [style=dashed label="element"]
  48 -> 71 [style=dashed label="term"]
  49 [label="State 49\n\l 18 command: list_op vector .\l"]
  49 -> "49R18" [style=solid]
 "49R18" [label="R18", fillcolor=3, shape=diamond, style=filled]
  50 [label="State 50\n\l  8 statement: '(' defn ')' .\l"]
  50 -> "50R8" [style=solid]
 "50R8" [label="R8", fillcolor=3, shape=diamond, style=filled]
  51 [label="State 51\n\l  7 statement: '(' def ')' .\l"]
  51 -> "51R7" [style=solid]
 "51R7" [label="R7", fillcolor=3, shape=diamond, style=filled]
  52 [label="State 52\n\l 45 term: ATOM .\l"]
  52 -> "52R45" [style=solid]
 "52R45" [label="R45", fillcolor=3, shape=diamond, style=filled]
  53 [label="State 53\n\l 46 term: NUM .\l"]
  53 -> "53R46" [style=solid]
 "53R46" [label="R46", fillcolor=3, shape=diamond, style=filled]
  54 [label="State 54\n\l  9 command: . opr factor factor\l 10        | . write\l 11        | . read\l 12        | . ATOM '(' compound_factor ')'\l 13        | . ATOM '(' ')'\l 14        | . expr\l 15        | . IF '(' expr ')' '?' '(' command ')' '(' command ')'\l 16        | . command '(' command ')'\l 17        | . list_iterator ATOM vector\l 18        | . list_op vector\l 19        | . NIL\l 20 list_iterator: . MAP\l 21              | . FILTER\l 22 list_op: . HEAD\l 23        | . TAIL\l 24        | . CONS\l 25        | . COUNT\l 26 write: . WRITE '(' command ')'\l 27 read: . READ '(' command ')'\l 44 factor: '(' . command ')'\l 47 expr: . log_opr factor factor\l 48     | . NOT '(' expr ')'\l 49 opr: . '+'\l 50    | . '-'\l 51    | . '*'\l 52    | . '/'\l 53 log_opr: . LOGOPR\l 54        | . COMPLOGOPR\l"]
  54 -> 6 [style=solid label="MAP"]
  54 -> 7 [style=solid label="FILTER"]
  54 -> 10 [style=solid label="ATOM"]
  54 -> 11 [style=solid label="COUNT"]
  54 -> 12 [style=solid label="CONS"]
  54 -> 13 [style=solid label="HEAD"]
  54 -> 14 [style=solid label="TAIL"]
  54 -> 15 [style=solid label="NIL"]
  54 -> 16 [style=solid label="NOT"]
  54 -> 17 [style=solid label="LOGOPR"]
  54 -> 18 [style=solid label="COMPLOGOPR"]
  54 -> 19 [style=solid label="READ"]
  54 -> 20 [style=solid label="WRITE"]
  54 -> 21 [style=solid label="IF"]
  54 -> 22 [style=solid label="'+'"]
  54 -> 23 [style=solid label="'-'"]
  54 -> 24 [style=solid label="'*'"]
  54 -> 25 [style=solid label="'/'"]
  54 -> 72 [style=dashed label="command"]
  54 -> 27 [style=dashed label="list_iterator"]
  54 -> 28 [style=dashed label="list_op"]
  54 -> 29 [style=dashed label="write"]
  54 -> 30 [style=dashed label="read"]
  54 -> 33 [style=dashed label="expr"]
  54 -> 34 [style=dashed label="opr"]
  54 -> 35 [style=dashed label="log_opr"]
  55 [label="State 55\n\l  9 command: opr factor . factor\l 43 factor: . term\l 44       | . '(' command ')'\l 45 term: . ATOM\l 46     | . NUM\l"]
  55 -> 52 [style=solid label="ATOM"]
  55 -> 53 [style=solid label="NUM"]
  55 -> 54 [style=solid label="'('"]
  55 -> 73 [style=dashed label="factor"]
  55 -> 56 [style=dashed label="term"]
  56 [label="State 56\n\l 43 factor: term .\l"]
  56 -> "56R43" [style=solid]
 "56R43" [label="R43", fillcolor=3, shape=diamond, style=filled]
  57 [label="State 57\n\l 43 factor: . term\l 44       | . '(' command ')'\l 45 term: . ATOM\l 46     | . NUM\l 47 expr: log_opr factor . factor\l"]
  57 -> 52 [style=solid label="ATOM"]
  57 -> 53 [style=solid label="NUM"]
  57 -> 54 [style=solid label="'('"]
  57 -> 74 [style=dashed label="factor"]
  57 -> 56 [style=dashed label="term"]
  58 [label="State 58\n\l 29 defn: DEFN ATOM $@1 . fnbody\l 30 fnbody: . '(' atom_vector '(' command ')' ')' '(' fnbody ')'\l 31       | . atom_vector '(' command ')'\l 35 atom_vector: . '[' atom_element ']'\l 36            | . '[' ']'\l"]
  58 -> 75 [style=solid label="'('"]
  58 -> 76 [style=solid label="'['"]
  58 -> 77 [style=dashed label="fnbody"]
  58 -> 78 [style=dashed label="atom_vector"]
  59 [label="State 59\n\l 33 def: DEF ATOM vector .\l"]
  59 -> "59R33" [style=solid]
 "59R33" [label="R33", fillcolor=3, shape=diamond, style=filled]
  60 [label="State 60\n\l 32 def: DEF ATOM factor .\l"]
  60 -> "60R32" [style=solid]
 "60R32" [label="R32", fillcolor=3, shape=diamond, style=filled]
  61 [label="State 61\n\l 13 command: ATOM '(' ')' .\l"]
  61 -> "61R13" [style=solid]
 "61R13" [label="R13", fillcolor=3, shape=diamond, style=filled]
  62 [label="State 62\n\l 12 command: ATOM '(' compound_factor . ')'\l"]
  62 -> 79 [style=solid label="')'"]
  63 [label="State 63\n\l 41 compound_factor: . factor\l 41                | factor .  [')']\l 42                | . factor compound_factor\l 42                | factor . compound_factor\l 43 factor: . term\l 44       | . '(' command ')'\l 45 term: . ATOM\l 46     | . NUM\l"]
  63 -> 52 [style=solid label="ATOM"]
  63 -> 53 [style=solid label="NUM"]
  63 -> 54 [style=solid label="'('"]
  63 -> 80 [style=dashed label="compound_factor"]
  63 -> 63 [style=dashed label="factor"]
  63 -> 56 [style=dashed label="term"]
  63 -> "63R41" [style=solid]
 "63R41" [label="R41", fillcolor=3, shape=diamond, style=filled]
  64 [label="State 64\n\l 48 expr: NOT '(' expr . ')'\l"]
  64 -> 81 [style=solid label="')'"]
  65 [label="State 65\n\l 16 command: command . '(' command ')'\l 27 read: READ '(' command . ')'\l"]
  65 -> 45 [style=solid label="'('"]
  65 -> 82 [style=solid label="')'"]
  66 [label="State 66\n\l 16 command: command . '(' command ')'\l 26 write: WRITE '(' command . ')'\l"]
  66 -> 45 [style=solid label="'('"]
  66 -> 83 [style=solid label="')'"]
  67 [label="State 67\n\l 15 command: IF '(' expr . ')' '?' '(' command ')' '(' command ')'\l"]
  67 -> 84 [style=solid label="')'"]
  68 [label="State 68\n\l 16 command: command . '(' command ')'\l 16        | command '(' command . ')'\l"]
  68 -> 45 [style=solid label="'('"]
  68 -> 85 [style=solid label="')'"]
  69 [label="State 69\n\l 17 command: list_iterator ATOM vector .\l"]
  69 -> "69R17" [style=solid]
 "69R17" [label="R17", fillcolor=3, shape=diamond, style=filled]
  70 [label="State 70\n\l 34 vector: '[' element . ']'\l"]
  70 -> 86 [style=solid label="']'"]
  71 [label="State 71\n\l 39 element: . term\l 39        | term .  [']']\l 40        | . term element\l 40        | term . element\l 45 term: . ATOM\l 46     | . NUM\l"]
  71 -> 52 [style=solid label="ATOM"]
  71 -> 53 [style=solid label="NUM"]
  71 -> 87 [style=dashed label="element"]
  71 -> 71 [style=dashed label="term"]
  71 -> "71R39" [style=solid]
 "71R39" [label="R39", fillcolor=3, shape=diamond, style=filled]
  72 [label="State 72\n\l 16 command: command . '(' command ')'\l 44 factor: '(' command . ')'\l"]
  72 -> 45 [style=solid label="'('"]
  72 -> 88 [style=solid label="')'"]
  73 [label="State 73\n\l  9 command: opr factor factor .\l"]
  73 -> "73R9" [style=solid]
 "73R9" [label="R9", fillcolor=3, shape=diamond, style=filled]
  74 [label="State 74\n\l 47 expr: log_opr factor factor .\l"]
  74 -> "74R47" [style=solid]
 "74R47" [label="R47", fillcolor=3, shape=diamond, style=filled]
  75 [label="State 75\n\l 30 fnbody: '(' . atom_vector '(' command ')' ')' '(' fnbody ')'\l 35 atom_vector: . '[' atom_element ']'\l 36            | . '[' ']'\l"]
  75 -> 76 [style=solid label="'['"]
  75 -> 89 [style=dashed label="atom_vector"]
  76 [label="State 76\n\l 35 atom_vector: '[' . atom_element ']'\l 36            | '[' . ']'\l 37 atom_element: . ATOM\l 38             | . ATOM atom_element\l"]
  76 -> 90 [style=solid label="ATOM"]
  76 -> 91 [style=solid label="']'"]
  76 -> 92 [style=dashed label="atom_element"]
  77 [label="State 77\n\l 29 defn: DEFN ATOM $@1 fnbody .\l"]
  77 -> "77R29" [style=solid]
 "77R29" [label="R29", fillcolor=3, shape=diamond, style=filled]
  78 [label="State 78\n\l 31 fnbody: atom_vector . '(' command ')'\l"]
  78 -> 93 [style=solid label="'('"]
  79 [label="State 79\n\l 12 command: ATOM '(' compound_factor ')' .\l"]
  79 -> "79R12" [style=solid]
 "79R12" [label="R12", fillcolor=3, shape=diamond, style=filled]
  80 [label="State 80\n\l 42 compound_factor: factor compound_factor .\l"]
  80 -> "80R42" [style=solid]
 "80R42" [label="R42", fillcolor=3, shape=diamond, style=filled]
  81 [label="State 81\n\l 48 expr: NOT '(' expr ')' .\l"]
  81 -> "81R48" [style=solid]
 "81R48" [label="R48", fillcolor=3, shape=diamond, style=filled]
  82 [label="State 82\n\l 27 read: READ '(' command ')' .\l"]
  82 -> "82R27" [style=solid]
 "82R27" [label="R27", fillcolor=3, shape=diamond, style=filled]
  83 [label="State 83\n\l 26 write: WRITE '(' command ')' .\l"]
  83 -> "83R26" [style=solid]
 "83R26" [label="R26", fillcolor=3, shape=diamond, style=filled]
  84 [label="State 84\n\l 15 command: IF '(' expr ')' . '?' '(' command ')' '(' command ')'\l"]
  84 -> 94 [style=solid label="'?'"]
  85 [label="State 85\n\l 16 command: command '(' command ')' .\l"]
  85 -> "85R16" [style=solid]
 "85R16" [label="R16", fillcolor=3, shape=diamond, style=filled]
  86 [label="State 86\n\l 34 vector: '[' element ']' .\l"]
  86 -> "86R34" [style=solid]
 "86R34" [label="R34", fillcolor=3, shape=diamond, style=filled]
  87 [label="State 87\n\l 40 element: term element .\l"]
  87 -> "87R40" [style=solid]
 "87R40" [label="R40", fillcolor=3, shape=diamond, style=filled]
  88 [label="State 88\n\l 44 factor: '(' command ')' .\l"]
  88 -> "88R44" [style=solid]
 "88R44" [label="R44", fillcolor=3, shape=diamond, style=filled]
  89 [label="State 89\n\l 30 fnbody: '(' atom_vector . '(' command ')' ')' '(' fnbody ')'\l"]
  89 -> 95 [style=solid label="'('"]
  90 [label="State 90\n\l 37 atom_element: . ATOM\l 37             | ATOM .  [']']\l 38             | . ATOM atom_element\l 38             | ATOM . atom_element\l"]
  90 -> 90 [style=solid label="ATOM"]
  90 -> 96 [style=dashed label="atom_element"]
  90 -> "90R37" [style=solid]
 "90R37" [label="R37", fillcolor=3, shape=diamond, style=filled]
  91 [label="State 91\n\l 36 atom_vector: '[' ']' .\l"]
  91 -> "91R36" [style=solid]
 "91R36" [label="R36", fillcolor=3, shape=diamond, style=filled]
  92 [label="State 92\n\l 35 atom_vector: '[' atom_element . ']'\l"]
  92 -> 97 [style=solid label="']'"]
  93 [label="State 93\n\l  9 command: . opr factor factor\l 10        | . write\l 11        | . read\l 12        | . ATOM '(' compound_factor ')'\l 13        | . ATOM '(' ')'\l 14        | . expr\l 15        | . IF '(' expr ')' '?' '(' command ')' '(' command ')'\l 16        | . command '(' command ')'\l 17        | . list_iterator ATOM vector\l 18        | . list_op vector\l 19        | . NIL\l 20 list_iterator: . MAP\l 21              | . FILTER\l 22 list_op: . HEAD\l 23        | . TAIL\l 24        | . CONS\l 25        | . COUNT\l 26 write: . WRITE '(' command ')'\l 27 read: . READ '(' command ')'\l 31 fnbody: atom_vector '(' . command ')'\l 47 expr: . log_opr factor factor\l 48     | . NOT '(' expr ')'\l 49 opr: . '+'\l 50    | . '-'\l 51    | . '*'\l 52    | . '/'\l 53 log_opr: . LOGOPR\l 54        | . COMPLOGOPR\l"]
  93 -> 6 [style=solid label="MAP"]
  93 -> 7 [style=solid label="FILTER"]
  93 -> 10 [style=solid label="ATOM"]
  93 -> 11 [style=solid label="COUNT"]
  93 -> 12 [style=solid label="CONS"]
  93 -> 13 [style=solid label="HEAD"]
  93 -> 14 [style=solid label="TAIL"]
  93 -> 15 [style=solid label="NIL"]
  93 -> 16 [style=solid label="NOT"]
  93 -> 17 [style=solid label="LOGOPR"]
  93 -> 18 [style=solid label="COMPLOGOPR"]
  93 -> 19 [style=solid label="READ"]
  93 -> 20 [style=solid label="WRITE"]
  93 -> 21 [style=solid label="IF"]
  93 -> 22 [style=solid label="'+'"]
  93 -> 23 [style=solid label="'-'"]
  93 -> 24 [style=solid label="'*'"]
  93 -> 25 [style=solid label="'/'"]
  93 -> 98 [style=dashed label="command"]
  93 -> 27 [style=dashed label="list_iterator"]
  93 -> 28 [style=dashed label="list_op"]
  93 -> 29 [style=dashed label="write"]
  93 -> 30 [style=dashed label="read"]
  93 -> 33 [style=dashed label="expr"]
  93 -> 34 [style=dashed label="opr"]
  93 -> 35 [style=dashed label="log_opr"]
  94 [label="State 94\n\l 15 command: IF '(' expr ')' '?' . '(' command ')' '(' command ')'\l"]
  94 -> 99 [style=solid label="'('"]
  95 [label="State 95\n\l  9 command: . opr factor factor\l 10        | . write\l 11        | . read\l 12        | . ATOM '(' compound_factor ')'\l 13        | . ATOM '(' ')'\l 14        | . expr\l 15        | . IF '(' expr ')' '?' '(' command ')' '(' command ')'\l 16        | . command '(' command ')'\l 17        | . list_iterator ATOM vector\l 18        | . list_op vector\l 19        | . NIL\l 20 list_iterator: . MAP\l 21              | . FILTER\l 22 list_op: . HEAD\l 23        | . TAIL\l 24        | . CONS\l 25        | . COUNT\l 26 write: . WRITE '(' command ')'\l 27 read: . READ '(' command ')'\l 30 fnbody: '(' atom_vector '(' . command ')' ')' '(' fnbody ')'\l 47 expr: . log_opr factor factor\l 48     | . NOT '(' expr ')'\l 49 opr: . '+'\l 50    | . '-'\l 51    | . '*'\l 52    | . '/'\l 53 log_opr: . LOGOPR\l 54        | . COMPLOGOPR\l"]
  95 -> 6 [style=solid label="MAP"]
  95 -> 7 [style=solid label="FILTER"]
  95 -> 10 [style=solid label="ATOM"]
  95 -> 11 [style=solid label="COUNT"]
  95 -> 12 [style=solid label="CONS"]
  95 -> 13 [style=solid label="HEAD"]
  95 -> 14 [style=solid label="TAIL"]
  95 -> 15 [style=solid label="NIL"]
  95 -> 16 [style=solid label="NOT"]
  95 -> 17 [style=solid label="LOGOPR"]
  95 -> 18 [style=solid label="COMPLOGOPR"]
  95 -> 19 [style=solid label="READ"]
  95 -> 20 [style=solid label="WRITE"]
  95 -> 21 [style=solid label="IF"]
  95 -> 22 [style=solid label="'+'"]
  95 -> 23 [style=solid label="'-'"]
  95 -> 24 [style=solid label="'*'"]
  95 -> 25 [style=solid label="'/'"]
  95 -> 100 [style=dashed label="command"]
  95 -> 27 [style=dashed label="list_iterator"]
  95 -> 28 [style=dashed label="list_op"]
  95 -> 29 [style=dashed label="write"]
  95 -> 30 [style=dashed label="read"]
  95 -> 33 [style=dashed label="expr"]
  95 -> 34 [style=dashed label="opr"]
  95 -> 35 [style=dashed label="log_opr"]
  96 [label="State 96\n\l 38 atom_element: ATOM atom_element .\l"]
  96 -> "96R38" [style=solid]
 "96R38" [label="R38", fillcolor=3, shape=diamond, style=filled]
  97 [label="State 97\n\l 35 atom_vector: '[' atom_element ']' .\l"]
  97 -> "97R35" [style=solid]
 "97R35" [label="R35", fillcolor=3, shape=diamond, style=filled]
  98 [label="State 98\n\l 16 command: command . '(' command ')'\l 31 fnbody: atom_vector '(' command . ')'\l"]
  98 -> 45 [style=solid label="'('"]
  98 -> 101 [style=solid label="')'"]
  99 [label="State 99\n\l  9 command: . opr factor factor\l 10        | . write\l 11        | . read\l 12        | . ATOM '(' compound_factor ')'\l 13        | . ATOM '(' ')'\l 14        | . expr\l 15        | . IF '(' expr ')' '?' '(' command ')' '(' command ')'\l 15        | IF '(' expr ')' '?' '(' . command ')' '(' command ')'\l 16        | . command '(' command ')'\l 17        | . list_iterator ATOM vector\l 18        | . list_op vector\l 19        | . NIL\l 20 list_iterator: . MAP\l 21              | . FILTER\l 22 list_op: . HEAD\l 23        | . TAIL\l 24        | . CONS\l 25        | . COUNT\l 26 write: . WRITE '(' command ')'\l 27 read: . READ '(' command ')'\l 47 expr: . log_opr factor factor\l 48     | . NOT '(' expr ')'\l 49 opr: . '+'\l 50    | . '-'\l 51    | . '*'\l 52    | . '/'\l 53 log_opr: . LOGOPR\l 54        | . COMPLOGOPR\l"]
  99 -> 6 [style=solid label="MAP"]
  99 -> 7 [style=solid label="FILTER"]
  99 -> 10 [style=solid label="ATOM"]
  99 -> 11 [style=solid label="COUNT"]
  99 -> 12 [style=solid label="CONS"]
  99 -> 13 [style=solid label="HEAD"]
  99 -> 14 [style=solid label="TAIL"]
  99 -> 15 [style=solid label="NIL"]
  99 -> 16 [style=solid label="NOT"]
  99 -> 17 [style=solid label="LOGOPR"]
  99 -> 18 [style=solid label="COMPLOGOPR"]
  99 -> 19 [style=solid label="READ"]
  99 -> 20 [style=solid label="WRITE"]
  99 -> 21 [style=solid label="IF"]
  99 -> 22 [style=solid label="'+'"]
  99 -> 23 [style=solid label="'-'"]
  99 -> 24 [style=solid label="'*'"]
  99 -> 25 [style=solid label="'/'"]
  99 -> 102 [style=dashed label="command"]
  99 -> 27 [style=dashed label="list_iterator"]
  99 -> 28 [style=dashed label="list_op"]
  99 -> 29 [style=dashed label="write"]
  99 -> 30 [style=dashed label="read"]
  99 -> 33 [style=dashed label="expr"]
  99 -> 34 [style=dashed label="opr"]
  99 -> 35 [style=dashed label="log_opr"]
  100 [label="State 100\n\l 16 command: command . '(' command ')'\l 30 fnbody: '(' atom_vector '(' command . ')' ')' '(' fnbody ')'\l"]
  100 -> 45 [style=solid label="'('"]
  100 -> 103 [style=solid label="')'"]
  101 [label="State 101\n\l 31 fnbody: atom_vector '(' command ')' .\l"]
  101 -> "101R31" [style=solid]
 "101R31" [label="R31", fillcolor=3, shape=diamond, style=filled]
  102 [label="State 102\n\l 15 command: IF '(' expr ')' '?' '(' command . ')' '(' command ')'\l 16        | command . '(' command ')'\l"]
  102 -> 45 [style=solid label="'('"]
  102 -> 104 [style=solid label="')'"]
  103 [label="State 103\n\l 30 fnbody: '(' atom_vector '(' command ')' . ')' '(' fnbody ')'\l"]
  103 -> 105 [style=solid label="')'"]
  104 [label="State 104\n\l 15 command: IF '(' expr ')' '?' '(' command ')' . '(' command ')'\l"]
  104 -> 106 [style=solid label="'('"]
  105 [label="State 105\n\l 30 fnbody: '(' atom_vector '(' command ')' ')' . '(' fnbody ')'\l"]
  105 -> 107 [style=solid label="'('"]
  106 [label="State 106\n\l  9 command: . opr factor factor\l 10        | . write\l 11        | . read\l 12        | . ATOM '(' compound_factor ')'\l 13        | . ATOM '(' ')'\l 14        | . expr\l 15        | . IF '(' expr ')' '?' '(' command ')' '(' command ')'\l 15        | IF '(' expr ')' '?' '(' command ')' '(' . command ')'\l 16        | . command '(' command ')'\l 17        | . list_iterator ATOM vector\l 18        | . list_op vector\l 19        | . NIL\l 20 list_iterator: . MAP\l 21              | . FILTER\l 22 list_op: . HEAD\l 23        | . TAIL\l 24        | . CONS\l 25        | . COUNT\l 26 write: . WRITE '(' command ')'\l 27 read: . READ '(' command ')'\l 47 expr: . log_opr factor factor\l 48     | . NOT '(' expr ')'\l 49 opr: . '+'\l 50    | . '-'\l 51    | . '*'\l 52    | . '/'\l 53 log_opr: . LOGOPR\l 54        | . COMPLOGOPR\l"]
  106 -> 6 [style=solid label="MAP"]
  106 -> 7 [style=solid label="FILTER"]
  106 -> 10 [style=solid label="ATOM"]
  106 -> 11 [style=solid label="COUNT"]
  106 -> 12 [style=solid label="CONS"]
  106 -> 13 [style=solid label="HEAD"]
  106 -> 14 [style=solid label="TAIL"]
  106 -> 15 [style=solid label="NIL"]
  106 -> 16 [style=solid label="NOT"]
  106 -> 17 [style=solid label="LOGOPR"]
  106 -> 18 [style=solid label="COMPLOGOPR"]
  106 -> 19 [style=solid label="READ"]
  106 -> 20 [style=solid label="WRITE"]
  106 -> 21 [style=solid label="IF"]
  106 -> 22 [style=solid label="'+'"]
  106 -> 23 [style=solid label="'-'"]
  106 -> 24 [style=solid label="'*'"]
  106 -> 25 [style=solid label="'/'"]
  106 -> 108 [style=dashed label="command"]
  106 -> 27 [style=dashed label="list_iterator"]
  106 -> 28 [style=dashed label="list_op"]
  106 -> 29 [style=dashed label="write"]
  106 -> 30 [style=dashed label="read"]
  106 -> 33 [style=dashed label="expr"]
  106 -> 34 [style=dashed label="opr"]
  106 -> 35 [style=dashed label="log_opr"]
  107 [label="State 107\n\l 30 fnbody: . '(' atom_vector '(' command ')' ')' '(' fnbody ')'\l 30       | '(' atom_vector '(' command ')' ')' '(' . fnbody ')'\l 31       | . atom_vector '(' command ')'\l 35 atom_vector: . '[' atom_element ']'\l 36            | . '[' ']'\l"]
  107 -> 75 [style=solid label="'('"]
  107 -> 76 [style=solid label="'['"]
  107 -> 109 [style=dashed label="fnbody"]
  107 -> 78 [style=dashed label="atom_vector"]
  108 [label="State 108\n\l 15 command: IF '(' expr ')' '?' '(' command ')' '(' command . ')'\l 16        | command . '(' command ')'\l"]
  108 -> 45 [style=solid label="'('"]
  108 -> 110 [style=solid label="')'"]
  109 [label="State 109\n\l 30 fnbody: '(' atom_vector '(' command ')' ')' '(' fnbody . ')'\l"]
  109 -> 111 [style=solid label="')'"]
  110 [label="State 110\n\l 15 command: IF '(' expr ')' '?' '(' command ')' '(' command ')' .\l"]
  110 -> "110R15" [style=solid]
 "110R15" [label="R15", fillcolor=3, shape=diamond, style=filled]
  111 [label="State 111\n\l 30 fnbody: '(' atom_vector '(' command ')' ')' '(' fnbody ')' .\l"]
  111 -> "111R30" [style=solid]
 "111R30" [label="R30", fillcolor=3, shape=diamond, style=filled]
}
